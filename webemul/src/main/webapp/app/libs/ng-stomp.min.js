angular.module("ngStomp",[]).service("$stomp",["$rootScope","$q",function(t,n){this.sock=null,this.stomp=null,this.debug=null,this.setDebug=function(t){this.debug=t},this.connect=function(t,s,e,o){s=s||{},o=o||{};var i=n.defer();return this.sock=new SockJS(t,null,o),this.sock.onclose=function(){angular.isFunction(e)&&e(new Error("Connection broken"))},this.stomp=Stomp.over(this.sock),this.stomp.debug=this.debug,this.stomp.connect(s,function(t){i.resolve(t)},function(t){i.reject(t),angular.isFunction(e)&&e(t)}),i.promise},this.disconnect=function(){var t=n.defer();return this.stomp.disconnect(t.resolve),t.promise},this.subscribe=this.on=function(t,n,s){return s=s||{},this.stomp.subscribe(t,function(t){var s=null;try{s=JSON.parse(t.body)}finally{n&&n(s,t.headers,t)}},s)},this.unsubscribe=this.off=function(t){t.unsubscribe()},this.send=function(t,s,e){var o=n.defer();try{var i=JSON.stringify(s);e=e||{},this.stomp.send(t,e,i),o.resolve()}catch(t){o.reject(t)}return o.promise}}]);